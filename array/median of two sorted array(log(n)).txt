#include <iostream>
#include <algorithm>
#include <bits/stdc++.h>
using namespace std;

int median_two_sorted(int*arr1,int l1,int r1,int*arr2,int l2,int r2)
{
    int m1,m2;

    if(r1-l1==1 and r2-l2==1)
     return  (max(arr1[l1], arr2[l2]) + min(arr1[r1], arr2[r2]))/2;



    if((r1-l1)%2==0)   //arr1 has odd elements
       m1=arr1[(r1+l1)/2] ;
    else
        m1=arr1[(r1+l1)/2]+arr1[((r1+l1)/2)+1];

    if((r2-l2)%2==0)   //arr2 has odd elements
       m2=arr2[(r2+l2)/2] ;
    else
        m2=arr2[(r2+l2)/2]+arr2[((r2+l2)/2)+1];


        if(m1==m2)
            return m1;
        else if(m1<m2)
        {
            if((r1-l1)%2!=0)    //even size
              return median_two_sorted(arr1,(l1+r1)/2,r1,arr2,l2,((l2+r2)/2)+1);
            else
              return median_two_sorted(arr1,(l1+r1)/2,r1,arr2,l2,(l2+r2)/2);


        }
        else
        {


             if((r1-l1)%2!=0)    //even size
              return median_two_sorted(arr1,l1,((l1+r1)/2)+1,arr2,(l2+r2)/2,r2);
            else
              return median_two_sorted(arr1,l1,((l1+r1)/2),arr2,(l2+r2)/2,r2);



        }











}

int main()
{

int arr1[]={1,2,3,4,6};
int arr2[]={4,7,8,10,13};

cout<<median_two_sorted(arr1,0,4,arr2,0,4);



    return 0;
}
